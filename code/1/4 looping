machines = ['iMac', 'MacPro', 'RackMac']
for mac_type in machines:
    print mac_type

# "Pythonâ€™s for statement iterates over the items of any sequence
# (a list or a string), in the order that they appear in the sequence."

# if the sequence is actually empty, that loop just never gets entered
special_users = ['Andrina', 'Anthony']
for user in special_users:
    print "%s is special!" % user

special_users = []
for user in special_users:
    print "%s is special!" % user

# for looping over a dict:
macs_by_model = {'iMac15,1': 50, 'MacPro6,1': 10, 'RackMac1,1': 210}
for model in macs_by_model:
    print "%s machines of type %s" % (macs_by_model[model], model)

# or a different iterator that gives us both the key _and_ value:
for model, count in macs_by_model.items():
    print "%s machines of type %s" % (count, model)
# read as "for key, value" or "for (key, value)"
# more readable code if you'll be working with both the keys and values
